import ufsi.NativePath
__UNC_FS_TYPE=ufsi.NativePath.FILE_SYSTEM_TYPE__NATIVE_UNC
__WIN_FS_TYPE=ufsi.NativePath.FILE_SYSTEM_TYPE__NATIVE_WINDOWS
del ufsi


"""
Paths to test:

Windows:
	Unc:
		\\
		\\ufsitest
		\\ufsitest\
		\\ufsitest.com
		\\ufsitest.com\
		\\ufsitest\ufsifile
		\\ufsitest\ufsifile.
		\\ufsitest\ufsifile.ext
		\\ufsitest\ufsidir\
		\\ufsitest\ufsidir\ufsifile.ext
		//ufsitest/ufsidir/ufsifile # windows doesn't find either of these
		\/ufsitest/ufsidir\ufsifile #  ditto...
	
	Drive Letter:
		C:
		C:ufsifile
		C:ufsidir\ufsifile
		C:\
		C:\ufsifile
		C:\ufsifile.
		C:\ufsifile.ext
		C:\ufsidir\
		C:\ufsidir\ufsifile.ext

	Regular path:
		\ufsifile
		ufsifile
		\ufsidir\
		ufsidir\
		\ufsidir\ufsifile
		ufsidir\ufsifile
		~\ufsifile
		~\ufsidir\
		~user\ufsidir\
		~user\ufsifile
	
Unix & windows:
	Regular path:
		/ufsifile
		/ufsifile.ext
		/ufsidir/
		/ufsidir/ufsifile.ext
"""

"""
Template Test Data Dict:
	{
	'path':r'',
	'str':r'',
	'split':(__WIN_FS_TYPE,None,None,[''],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':r''+'\\',
	'getParentDir':r''+'\\',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':'',
	'isAbsolute':True
	}
"""

# test abs vs rel
ABS_UNC={
	'path':r'\\ufsitest\ufsidir\ufsifile',
	'str':r'\\ufsitest\ufsidir\ufsifile',
	'split':(__UNC_FS_TYPE,'ufsitest',None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\\ufsitest\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_DRIVE={
	'path':r'C:\ufsidir\ufsifile',
	'str':r'C:\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':'C',
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'C:\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS={
	'path':r'\ufsidir\ufsifile',
	'str':r'\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_HOME={
	'path':r'~\ufsidir\ufsifile',
	'str':r'~\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['~','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['~','ufsidir'],
	'getDirsString':r'~\ufsidir'+'\\',
	'getParentDir':r'~\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_USER={
	'path':r'~user\ufsidir\ufsifile',
	'str':r'~user\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['~user','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['~user','ufsidir'],
	'getDirsString':r'~user\ufsidir'+'\\',
	'getParentDir':r'~user\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
REL={
	'path':r'ufsidir\ufsifile',
	'str':r'ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir'+'\\',
	'getParentDir':r'ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}


# test unc host name
# TODO: should this result in a None ufsifilename? - actually the '\' char should be included as a ufsidir path
UNC_HOST={
	'path':r'\\ufsitest',
	'str':r'\\ufsitest',
	'split':(__UNC_FS_TYPE,'ufsitest',None,[],'',None),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
UNC_HOST_SLASH={
	'path':r'\\ufsitest'+'\\',
	'str':r'\\ufsitest'+'\\',
	'split':(__UNC_FS_TYPE,'ufsitest',None,[''],'',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
UNC_HOST_DIR={
	'path':r'\\ufsitest\ufsidir'+'\\',
	'str':r'\\ufsitest\ufsidir'+'\\',
	'split':(__UNC_FS_TYPE,'ufsitest',None,['','ufsidir'],'',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\\ufsitest'+'\\',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}



# test drive letter
DRIVE_LETTER_COLON={
	'path':r'C:',
	'str':r'C:',
	'split':(__WIN_FS_TYPE,None,None,[],'',None),
	'getDriveLetter':'C',
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_LETTER_COLON_SLASH={
	'path':r'C:'+'\\',
	'str':r'C:'+'\\',
	'split':(__WIN_FS_TYPE,None,None,[''],'',None),
	'getDriveLetter':'C',
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_LETTER_COLON_FILE={
	'path':r'C:ufsifile',
	'str':r'C:ufsifile',
	'split':(__WIN_FS_TYPE,None,None,[],'ufsifile',None),
	'getDriveLetter':'C',
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':r'C:',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_LETTER_COLON_SLASH_FILE={
	'path':r'C:\ufsifile',
	'str':r'C:\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,[''],'ufsifile',None),
	'getDriveLetter':'C',
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':r'C:'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_LETTER_COLON_DIR={
	'path':r'C:ufsidir'+'\\',
	'str':r'C:ufsidir'+'\\',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir'],'',None),
	'getDriveLetter':'C',
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir'+'\\',
	'getParentDir':r'C:',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_LETTER_COLON_SLASH_DIR={
	'path':r'C:\ufsidir'+'\\',
	'str':r'C:\ufsidir'+'\\',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'',None),
	'getDriveLetter':'C',
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'C:'+'\\',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}


# test different slash types
BACK_SLASHES_ONLY={
	'path':r'\ufsidir\ufsifile',
	'str':r'\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
MIXED_SLASHES={
	'path':r'\ufsidir/ufsifile',
	'str':r'\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
FORWARD_SLASHES_ONLY={
	'path':r'/ufsidir/ufsifile',
	'str':r'\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_BACK_SLASH={
	'path':r'C:'+'\\',
	'str':r'C:'+'\\',
	'split':(__WIN_FS_TYPE,None,None,[''],'',None),
	'getDriveLetter':'C',
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
DRIVE_FORWARD_SLASH={
	'path':r'C:/',
	'str':r'C:'+'\\',
	'split':(__WIN_FS_TYPE,None,None,[''],'',None),
	'getDriveLetter':'C',
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
UNC_BACK_SLASH={
	'path':r'\\ufsitest'+'\\',
	'str':r'\\ufsitest'+'\\',
	'split':(__UNC_FS_TYPE,'ufsitest',None,[''],'',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
# TODO: this is more flexible than a real windows UNC interpreter - is this ok?
UNC_FORWARD_SLASH={
	'path':r'//ufsitest/',
	'str':r'\\ufsitest'+'\\',
	'split':(__UNC_FS_TYPE,'ufsitest',None,[''],'',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}



# test ufsidirs
REL_NO_DIR={
	'path':r'ufsifile',
	'str':r'ufsifile',
	'split':(__WIN_FS_TYPE,None,None,[],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':'',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
ABS_ONE_DIR={
	'path':'\\',
	'str':'\\',
	'split':(__WIN_FS_TYPE,None,None,[''],'',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':'\\',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_ONE_DIR_FILE={
	'path':r'\ufsifile',
	'str':r'\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,[''],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':[''],
	'getDirsString':r''+'\\',
	'getParentDir':'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_TWO_DIRS={
	'path':r'\ufsidir'+'\\',
	'str':r'\ufsidir'+'\\',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':'\\',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_TWO_DIRS_FILE={
	'path':r'\ufsidir\ufsifile',
	'str':r'\ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir'],
	'getDirsString':r'\ufsidir'+'\\',
	'getParentDir':r'\ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
# TODO: apparently this ufsidirs parent ufsidir should be ''
REL_ONE_DIR={
	'path':r'ufsidir'+'\\',
	'str':r'ufsidir'+'\\',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir'],'',None),
	'getDriveLetter':None,
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir'+'\\',
	'getParentDir':'',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':False
	}
REL_ONE_DIR_FILE={
	'path':r'ufsidir\ufsifile',
	'str':r'ufsidir\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir'+'\\',
	'getParentDir':r'ufsidir'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
REL_THREE_DIRS_FILE={
	'path':r'ufsidir1\ufsidir2\ufsidir3\ufsifile',
	'str':r'ufsidir1\ufsidir2\ufsidir3\ufsifile',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir1','ufsidir2','ufsidir3'],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':['ufsidir1','ufsidir2','ufsidir3'],
	'getDirsString':r'ufsidir1\ufsidir2\ufsidir3'+'\\',
	'getParentDir':r'ufsidir1\ufsidir2\ufsidir3'+'\\',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}




# test ufsifile parts
EMPTY_FILE={
	'path':r'',
	'str':r'',
	'split':(__WIN_FS_TYPE,None,None,[],'',None),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':False
	}
EXT={
	'path':r'.ext',
	'str':r'.ext',
	'split':(__WIN_FS_TYPE,None,None,[],'','ext'),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':'',
	'getFileName':'.ext',
	'getFileBase':'',
	'getFileExt':'ext',
	'isAbsolute':False
	}
FILE_EXT={
	'path':r'ufsifile.ext',
	'str':r'ufsifile.ext',
	'split':(__WIN_FS_TYPE,None,None,[],'ufsifile','ext'),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':'',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':False
	}
FILE_PERIOD={
	'path':r'ufsifile.',
	'str':r'ufsifile.',
	'split':(__WIN_FS_TYPE,None,None,[],'ufsifile',''),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':'',
	'getFileName':'ufsifile.',
	'getFileBase':'ufsifile',
	'getFileExt':'',
	'isAbsolute':False
	}
FILE={
	'path':r'ufsifile',
	'str':r'ufsifile',
	'split':(__WIN_FS_TYPE,None,None,[],'ufsifile',None),
	'getDriveLetter':None,
	'getDirsList':[],
	'getDirsString':'',
	'getParentDir':'',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
DIR_FILE_EXT={
	'path':r'ufsidir\ufsifile.ext',
	'str':r'ufsidir\ufsifile.ext',
	'split':(__WIN_FS_TYPE,None,None,['ufsidir'],'ufsifile','ext'),
	'getDriveLetter':None,
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir'+'\\',
	'getParentDir':r'ufsidir'+'\\',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':False
	}
DIR_PERIOD_FILE_EXT={
	'path':r'\ufsidir.type\ufsifile.ext',
	'str':r'\ufsidir.type\ufsifile.ext',
	'split':(__WIN_FS_TYPE,None,None,['','ufsidir.type'],'ufsifile','ext'),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir.type'],
	'getDirsString':r'\ufsidir.type'+'\\',
	'getParentDir':r'\ufsidir.type'+'\\',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':True
	}


def __outputTestedPaths():
	import sys
	selfModule=sys.modules[__name__]
	del sys
	
	for s in filter(lambda s:not s.startswith('__'),ufsidir(selfModule)):
		#print s
		d=getattr(selfModule,s)
		print d['path']


if __name__=="__main__":
	__outputTestedPaths()
