import ufsi.NativePath
__FS_TYPE=ufsi.NativePath.FILE_SYSTEM_TYPE__NATIVE_UNIX
del ufsi


# test absolute vs relative part
ABS={
	'path':r'/ufsidir/ufsifile.ext',
	'str':r'/ufsidir/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['','ufsidir'],'ufsifile','ext'),
	'getDirsList':['','ufsidir'],
	'getDirsString':r'/ufsidir/',
	'getParentDir':r'/ufsidir/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':True
	}
ABS_HOME={
	'path':r'~/ufsidir/ufsifile.ext',
	'str':r'~/ufsidir/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['~','ufsidir'],'ufsifile','ext'),
	'getDirsList':['~','ufsidir'],
	'getDirsString':r'~/ufsidir/',
	'getParentDir':r'~/ufsidir/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':True
	}
ABS_USER={
	'path':r'~root/ufsidir/ufsifile.ext',
	'str':r'~root/ufsidir/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['~root','ufsidir'],'ufsifile','ext'),
	'getDirsList':['~root','ufsidir'],
	'getDirsString':r'~root/ufsidir/',
	'getParentDir':r'~root/ufsidir/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':True
	}
REL={
	'path':r'ufsidir/ufsifile.ext',
	'str':r'ufsidir/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['ufsidir'],'ufsifile','ext'),
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir/',
	'getParentDir':r'ufsidir/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':False
	}


# test ufsidirs
REL_NO_DIR={
	'path':r'ufsifile',
	'str':r'ufsifile',
	'split':(__FS_TYPE,None,None,[],'ufsifile',None),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':'',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
ABS_ONE_DIR={
	'path':r'/',
	'str':r'/',
	'split':(__FS_TYPE,None,None,[''],'',None),
	'getDirsList':[''],
	'getDirsString':r'/',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_ONE_DIR_FILE={
	'path':r'/ufsifile',
	'str':r'/ufsifile',
	'split':(__FS_TYPE,None,None,[''],'ufsifile',None),
	'getDirsList':[''],
	'getDirsString':r'/',
	'getParentDir':r'/',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_TWO_DIRS={
	'path':r'/ufsidir/',
	'str':r'/ufsidir/',
	'split':(__FS_TYPE,None,None,['','ufsidir'],'',None),
	'getDirsList':['','ufsidir'],
	'getDirsString':r'/ufsidir/',
	'getParentDir':r'/',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':True
	}
ABS_TWO_DIRS_FILE={
	'path':r'/ufsidir/ufsifile',
	'str':r'/ufsidir/ufsifile',
	'split':(__FS_TYPE,None,None,['','ufsidir'],'ufsifile',None),
	'getDirsList':['','ufsidir'],
	'getDirsString':r'/ufsidir/',
	'getParentDir':r'/ufsidir/',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':True
	}
REL_ONE_DIR={
	'path':r'ufsidir/',
	'str':r'ufsidir/',
	'split':(__FS_TYPE,None,None,['ufsidir'],'',None),
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir/',
	'getParentDir':r'',
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':False
	}
REL_ONE_DIR_FILE={
	'path':r'ufsidir/ufsifile',
	'str':r'ufsidir/ufsifile',
	'split':(__FS_TYPE,None,None,['ufsidir'],'ufsifile',None),
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir/',
	'getParentDir':r'ufsidir/',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
REL_THREE_DIRS_FILE={
	'path':r'ufsidir1/ufsidir2/ufsidir3/ufsifile',
	'str':r'ufsidir1/ufsidir2/ufsidir3/ufsifile',
	'split':(__FS_TYPE,None,None,['ufsidir1','ufsidir2','ufsidir3'],'ufsifile',None),
	'getDirsList':['ufsidir1','ufsidir2','ufsidir3'],
	'getDirsString':r'ufsidir1/ufsidir2/ufsidir3/',
	'getParentDir':r'ufsidir1/ufsidir2/ufsidir3/',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}


# test ufsifile parts
EMPTY_FILE={
	'path':r'',
	'str':r'',
	'split':(__FS_TYPE,None,None,[],'',None),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':None,
	'getFileName':'',
	'getFileBase':'',
	'getFileExt':None,
	'isAbsolute':False
	}
EXT={
	'path':r'.ext',
	'str':r'.ext',
	'split':(__FS_TYPE,None,None,[],'','ext'),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':'',
	'getFileName':'.ext',
	'getFileBase':'',
	'getFileExt':'ext',
	'isAbsolute':False
	}
FILE_EXT={
	'path':r'ufsifile.ext',
	'str':r'ufsifile.ext',
	'split':(__FS_TYPE,None,None,[],'ufsifile','ext'),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':'',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':False
	}
FILE_PERIOD={
	'path':r'ufsifile.',
	'str':r'ufsifile.',
	'split':(__FS_TYPE,None,None,[],'ufsifile',''),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':'',
	'getFileName':'ufsifile.',
	'getFileBase':'ufsifile',
	'getFileExt':'',
	'isAbsolute':False
	}
FILE={
	'path':r'ufsifile',
	'str':r'ufsifile',
	'split':(__FS_TYPE,None,None,[],'ufsifile',None),
	'getDirsList':[],
	'getDirsString':r'',
	'getParentDir':'',
	'getFileName':'ufsifile',
	'getFileBase':'ufsifile',
	'getFileExt':None,
	'isAbsolute':False
	}
DIR_FILE_EXT={
	'path':r'ufsidir/ufsifile.ext',
	'str':r'ufsidir/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['ufsidir'],'ufsifile','ext'),
	'getDriveLetter':None,
	'getDirsList':['ufsidir'],
	'getDirsString':r'ufsidir/',
	'getParentDir':r'ufsidir/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':False
	}
DIR_PERIOD_FILE_EXT={
	'path':r'/ufsidir.type/ufsifile.ext',
	'str':r'/ufsidir.type/ufsifile.ext',
	'split':(__FS_TYPE,None,None,['','ufsidir.type'],'ufsifile','ext'),
	'getDriveLetter':None,
	'getDirsList':['','ufsidir.type'],
	'getDirsString':r'/ufsidir.type/',
	'getParentDir':r'/ufsidir.type/',
	'getFileName':'ufsifile.ext',
	'getFileBase':'ufsifile',
	'getFileExt':'ext',
	'isAbsolute':True
	}



def __outputTestedPaths():
	import sys
	selfModule=sys.modules[__name__]
	del sys
	
	for s in filter(lambda s:not s.startswith('__'),ufsidir(selfModule)):
		#print s
		d=getattr(selfModule,s)
		print d['path']


if __name__=="__main__":
	__outputTestedPaths()
